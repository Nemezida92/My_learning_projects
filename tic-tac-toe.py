# Приветсвие и правила игры
def greet():
    print("----------Добро пожаловать в игру крестики - нолики!----------")
    print("--------------------------------------------------------------")
    print("Правила игры: два игрока 'крестик' и 'нолик' ходят по очереди.")
    print("Формат ввода: x и y, где x - номер строки, y - номер столбца. ")
    print("--------------------------------------------------------------")

# Вызов функции приветствия
greet()

# Функция вывода игрового поля
def show():
    print()
    print("    | 0 | 1 | 2 | ")
    print("  --------------- ")
    for i, row in enumerate(field):
        row_str = f"  {i} | {' | '.join(row)} | "
        print(row_str)
        print("  --------------- ")
    print()

# Функция запроса данных от игроков и проверка значений (граничные значения, введены только числа, введены обязательно 2 координаты, занята ли клетка)
def ask():
    while True:
        cords = input("Ваш ход: ").split()

        if len(cords) != 2:
            print("Введите 2 координаты! ")
            continue

        x, y = cords
# Проверка, являются ли все символы в строке числами
        if not (x.isdigit()) or not (y.isdigit()):
            print("Введите числа! ")
            continue

        x, y = int(x), int(y)

        if 0 > x or x > 2 or 0 > y or y > 2:
            print("Координаты вне диапазона! ")
            continue

        if field[x][y] != " ":
            print(" Клетка занята! ")
            continue

        return x, y

# Функция для проверки выигрышных комбинация (берется из массива win_cord)
def check_win():
    win_cord = (((0, 0), (0, 1), (0, 2)), ((1, 0), (1, 1), (1, 2)), ((2, 0), (2, 1), (2, 2)),
                ((0, 2), (1, 1), (2, 0)), ((0, 0), (1, 1), (2, 2)), ((0, 0), (1, 0), (2, 0)),
                ((0, 1), (1, 1), (2, 1)), ((0, 2), (1, 2), (2, 2)))
    for cord in win_cord:
        symbols = []
        for c in cord:
            symbols.append(field[c[0]][c[1]])
        if symbols == ["X", "X", "X"]:
            print("Выиграл X!!!")
            return True
        if symbols == ["0", "0", "0"]:
            print("Выиграл 0!!!")
            return True
    return False

# Создание игрового поля
field = [[" " for j in range(3)] for i in range(3)]
# Создание счетчика для подсчета шага в игре
count = 0
while True:
    count += 1
    show()
    if count % 2 == 1:
        print("Ходит крестик: ")
    else:
        print("Ходит нолик: ")
# Возвращаем переменные из функции ask()
    x, y = ask()
# Проверяем чей ход и отрисовываем X или 0 на поле игры
    if count % 2 == 1:
        field[x][y] = "X"
    else:
        field[x][y] = "0"
# Если срабатывает функция выигрышной комбинации, то прекращаем работу
    if check_win():
        break
# Проверка условия на "ничью"
    if count == 9:
        print(" Ничья!")
        break